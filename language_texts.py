# language_texts.py

texts = {
    "English": {
        "title": "ЁЯОЩя╕П AI Noise Reducer",
        "subheader": "Upload or record audio to remove background noise.",
        "upload_audio": "Upload Audio",
        "record_audio": "Record Audio",
        "choose_model": "Choose noise reduction model:",
        "process_status": "Processing... Please wait.",
        "denoising_complete": "{model} denoising completed successfully!",
        "feedback_title": "ЁЯЧгя╕П Share Your Feedback",
        "feedback_placeholder": "Write your feedback:",
        "rating_prompt": "Rate this app (1 to 5 stars)",
        "rating_labels": ["ЁЯШЮ Poor", "ЁЯШР Fair", "ЁЯЩВ Good", "ЁЯША Very Good", "ЁЯМЯ Excellent"],
        "previous_feedbacks": "ЁЯУЭ Previous Feedbacks"
    },
    "Spanish": {
        "title": "ЁЯОЩя╕П Reductor de Ruido AI",
        "subheader": "Sube o graba audio para eliminar el ruido de fondo.",
        "upload_audio": "Subir Audio",
        "record_audio": "Grabar Audio",
        "choose_model": "Elige un modelo de reducci├│n de ruido:",
        "process_status": "Procesando... Por favor espera.",
        "denoising_complete": "┬бReducci├│n de ruido con {model} completada exitosamente!",
        "feedback_title": "ЁЯЧгя╕П Comparte tus comentarios",
        "feedback_placeholder": "Escribe tus comentarios:",
        "rating_prompt": "Califica esta aplicaci├│n (1 a 5 estrellas)",
        "rating_labels": ["ЁЯШЮ Pobre", "ЁЯШР Regular", "ЁЯЩВ Bueno", "ЁЯША Muy Bueno", "ЁЯМЯ Excelente"]
    },
    "French": {
        "title": "ЁЯОЩя╕П R├йducteur de Bruit AI",
        "subheader": "T├йl├йchargez ou enregistrez de l'audio pour supprimer le bruit de fond.",
        "upload_audio": "T├йl├йcharger Audio",
        "record_audio": "Enregistrer Audio",
        "choose_model": "Choisissez un mod├иle de r├йduction de bruit :",
        "process_status": "Traitement en cours... Veuillez patienter.",
        "denoising_complete": "R├йduction de bruit par {model} termin├йe avec succ├иs !",
        "feedback_title": "ЁЯЧгя╕П Donnez votre avis",
        "feedback_placeholder": "├Йcrivez votre avis :",
        "rating_prompt": "Notez cette application (1 ├а 5 ├йtoiles)",
        "rating_labels": ["ЁЯШЮ Mauvais", "ЁЯШР Passable", "ЁЯЩВ Bon", "ЁЯША Tr├иs Bon", "ЁЯМЯ Excellent"]
    },
    "Marathi": {
        "title": "ЁЯОЩя╕П рдПрдЖрдп рдЖрд╡рд╛рдЬ рдХрдореА рдХрд░рдгрд╛рд░реЗ",
        "subheader": "рдкрд╛рд░реНрд╢реНрд╡рднреВрдореАрдЪрд╛ рдЖрд╡рд╛рдЬ рдХрд╛рдврдгреНрдпрд╛рд╕рд╛рдареА рдСрдбрд┐рдУ рдЕрдкрд▓реЛрдб рдХрд░рд╛ рдХрд┐рдВрд╡рд╛ рд░реЗрдХреЙрд░реНрдб рдХрд░рд╛.",
        "upload_audio": "рдСрдбрд┐рдУ рдЕрдкрд▓реЛрдб рдХрд░рд╛",
        "record_audio": "рдСрдбрд┐рдУ рд░реЗрдХреЙрд░реНрдб рдХрд░рд╛",
        "choose_model": "рдЖрд╡рд╛рдЬ рдХрдореА рдХрд░рдгрд╛рд░реЗ рдореЙрдбреЗрд▓ рдирд┐рд╡рдбрд╛:",
        "process_status": "рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдЪрд╛рд▓реВ рдЖрд╣реЗ... рдХреГрдкрдпрд╛ рдерд╛рдВрдмрд╛.",
        "denoising_complete": "{model} рджреНрд╡рд╛рд░реЗ рдЖрд╡рд╛рдЬ рдХрдореА рдХрд░рдгреЗ рдпрд╢рд╕реНрд╡реА рдЭрд╛рд▓реЗ!",
        "feedback_title": "ЁЯЧгя╕П рддреБрдордЪреЗ рдЕрднрд┐рдкреНрд░рд╛рдп рджреНрдпрд╛",
        "feedback_placeholder": "рддреБрдордЪреЗ рдЕрднрд┐рдкреНрд░рд╛рдп рд▓рд┐рд╣рд╛:",
        "rating_prompt": "рдпрд╛ рдЕтАНреЕрдкрд▓рд╛ рд░реЗрдЯ рдХрд░рд╛ (1 рддреЗ 5 рд╕реНрдЯрд╛рд░)",
        "rating_labels": ["ЁЯШЮ рдЦрд░рд╛рдм", "ЁЯШР рдареАрдХ", "ЁЯЩВ рдЪрд╛рдВрдЧрд▓реЗ", "ЁЯША рдЦреВрдк рдЪрд╛рдВрдЧрд▓реЗ", "ЁЯМЯ рдЙрддреНрдХреГрд╖реНрдЯ"]
    },
    "Hindi": {
        "title": "ЁЯОЩя╕П рдПрдЖрдИ рдиреЙрдЗрдЬрд╝ рд░рд┐рдбреНрдпреВрд╕рд░",
        "subheader": "рдмреИрдХрдЧреНрд░рд╛рдЙрдВрдб рдиреЙрдЗрдЬрд╝ рд╣рдЯрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдСрдбрд┐рдпреЛ рдЕрдкрд▓реЛрдб рдпрд╛ рд░рд┐рдХреЙрд░реНрдб рдХрд░реЗрдВред",
        "upload_audio": "рдСрдбрд┐рдпреЛ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
        "record_audio": "рдСрдбрд┐рдпреЛ рд░рд┐рдХреЙрд░реНрдб рдХрд░реЗрдВ",
        "choose_model": "рд╢реЛрд░ рдХрдо рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдореЙрдбрд▓ рдЪреБрдиреЗрдВ:",
        "process_status": "рдкреНрд░реЛрд╕реЗрд╕ рд╣реЛ рд░рд╣рд╛ рд╣реИ... рдХреГрдкрдпрд╛ рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВред",
        "denoising_complete": "{model} рджреНрд╡рд╛рд░рд╛ рдиреЙрдЗрдЬрд╝ рд░рд┐рдбрдХреНрд╢рди рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкреВрд░рд╛ рд╣реБрдЖ!",
        "feedback_title": "ЁЯЧгя╕П рдЕрдкрдирд╛ рдлреАрдбрдмреИрдХ рджреЗрдВ",
        "feedback_placeholder": "рдЕрдкрдирд╛ рдлреАрдбрдмреИрдХ рд▓рд┐рдЦреЗрдВ:",
        "rating_prompt": "рдЗрд╕ рдРрдк рдХреЛ рд░реЗрдЯ рдХрд░реЗрдВ (1 рд╕реЗ 5 рд╕реНрдЯрд╛рд░)",
        "rating_labels": ["ЁЯШЮ рдЦрд░рд╛рдм", "ЁЯШР рдФрд╕рдд", "ЁЯЩВ рдЕрдЪреНрдЫрд╛", "ЁЯША рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛", "ЁЯМЯ рдмреЗрд╣рддрд░реАрди"]
    }
}

# Wrapper class to enable fallback to English
class SafeTexts:
    def __init__(self, texts, default_lang="English"):
        self.texts = texts
        self.default_lang = default_lang

    def __getitem__(self, lang):
        return SafeLang(self.texts, lang, self.default_lang)

class SafeLang:
    def __init__(self, texts, lang, default_lang):
        self.lang = lang
        self.default_lang = default_lang
        self.texts = texts

    def __getitem__(self, key):
        return (self.texts.get(self.lang, {}).get(key) or
                self.texts[self.default_lang].get(key, f"[Missing: {key}]"))

# Wrap the dictionary
texts = SafeTexts(texts)
